// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  role       Role      @default(USER)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  student    Student?
  code       RegistrationCode? @relation(fields: [registrationCodeId], references: [id])
  registrationCodeId Int?
  comments   CalendarComment[]
}

model Student {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  enrolledAt DateTime @default(now())
  labs      Lab[]
}

model Lab {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  students    Student[]
}

model RegistrationCode {
  id         Int     @id @default(autoincrement())
  code       String  @unique
  createdAt  DateTime @default(now())
  users      User[]  
}

model CalendarComment {
  id        Int      @id @default(autoincrement())
  date      DateTime
  comment   String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

enum Role {
  USER
  STUDENT
  ADMIN
}